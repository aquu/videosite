{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/mux.js/lib/aac/probe.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js"],"names":["findBox","parseType","timescale","startTime","toUnsigned","__webpack_require__","data","path","i","size","type","end","subresults","results","length","byteLength","subarray","push","slice","concat","buffer","result","String","fromCharCode","init","reduce","trak","tkhd","version","index","id","mdhd","fragment","trafs","baseTimes","apply","map","traf","tfhd","scale","tfdt","Math","pow","Infinity","min","isFinite","module","exports","window","isFunction","parseHeaders","xtend","initParams","uri","options","callback","params","createXHR","_createXHR","Error","called","err","response","body","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","undefined","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","e","getBody","method","headers","url","rawRequest","getAllResponseHeaders","key","cors","XDomainRequest","XMLHttpRequest","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","hasOwnProperty","obj","isEmpty","beforeSend","send","array","iterator","forEachArray","toUpperCase","StreamTypes","handleRollover","probe","ts","aac","parseAudioPes_","bytes","pmt","packet","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","audio","parseVideoPes_","frame","pes","currentFrame","video","firstKeyFrame","Uint8Array","shift","set","videoPacketContainsKeyFrame","inspectTs_","parsePat","parsePmt","parsePsi_","H264_STREAM_TYPE","ADTS_STREAM_TYPE","inspect","baseTimestamp","charCodeAt","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","dts","pts","inspectAac_","segmentInfo","audioBaseTimestamp","forEach","info","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","Object","defineProperty","__webpack_exports__","value","global","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","n","__WEBPACK_IMPORTED_MODULE_1_global_document__","__WEBPACK_IMPORTED_MODULE_1_global_document___default","__WEBPACK_IMPORTED_MODULE_2_tsml__","__WEBPACK_IMPORTED_MODULE_2_tsml___default","__WEBPACK_IMPORTED_MODULE_3_xhr__","__WEBPACK_IMPORTED_MODULE_3_xhr___default","__WEBPACK_IMPORTED_MODULE_4_videojs_vtt_js__","__WEBPACK_IMPORTED_MODULE_4_videojs_vtt_js___default","__WEBPACK_IMPORTED_MODULE_5_safe_json_parse_tuple__","__WEBPACK_IMPORTED_MODULE_5_safe_json_parse_tuple___default","__WEBPACK_IMPORTED_MODULE_6_url_toolkit__","__WEBPACK_IMPORTED_MODULE_6_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_7_m3u8_parser__","__WEBPACK_IMPORTED_MODULE_8_mpd_parser__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_mp4_probe__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_mp4_probe___default","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_tools_ts_inspector_js__","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_tools_ts_inspector_js___default","__WEBPACK_IMPORTED_MODULE_11_aes_decrypter__","log","level","history","logByType","args","lvl","levels","lvlRegExp","RegExp","unshift","a","console","fn","test","Array","isArray","_len","arguments","_key","all","off","debug","warn","error","DEFAULT","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","_typeof","Symbol","constructor","prototype","classCallCheck","instance","Constructor","TypeError","inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","possibleConstructorReturn","self","call","ReferenceError","taggedTemplateLiteralLoose","strings","raw","toString","keys","object","isObject","each","assign","target","sources","source","isPlain","computedStyle","el","prop","getComputedStyle","cs","_templateObject","isNonBlankString","str","throwIfWhitespace","isReal","document","isEl","nodeType","isInFrame","parent","x","createQuerier","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","indexOf","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","trim","removeClass","classToRemove","remove","split","filter","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","name","attrVal","getAttribute","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","height","parseFloat","width","findPosition","box","left","top","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","y","max","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","Date","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","opts","get","addEventListener","passiveEvents","on","guid","hash","handlersCopy","m","passive","attachEvent","removeType","t","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","this","Events","_windowLoaded","videojs","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","createStyleElement","style","setTextContent","styleSheet","cssText","bind","uid","bound","throttle","last","now","debounce","immediate","_later","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_this","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","tokens","defaultValue","language","languages","primaryCode","primaryLang","localizedString","replace","match","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","Boolean","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","pop","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","_i","MediaError","message","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","track","acc","cues","cue","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","props","href","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","pathParts","toLowerCase","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","mode","default_","default","activeCues_","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","trackList","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","s","floor","h","gm","gh","isNaN","implementation","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","Number","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","r","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","catch","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this8","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","b","_this9","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this10","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this11","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","Function","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","classCallCheck$1","createClass$1","protoProps","staticProps","inherits$1","possibleConstructorReturn$1","slicedToArray$1","arr","_arr","_n","_d","_e","_s","done","sliceIterator","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateMaster","media","playlist","playlists","segments","mediaSequence","mergedPlaylist","offset","updateSegments","segment","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","targetDuration","PlaylistLoader","srcUrl","hls","getPrototypeOf","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","manifest","media_","endList","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","delay","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","intervalDuration","endSequence","expired","backward","forward","precise","backwardDuration","forwardDuration","totalDuration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","BANDWIDTH","MAX_VALUE","Playlist","seekableStart","seekableEnd","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","range","formatHexString","substring","formatAsciiString","createTransferableMessage","transferable","ArrayBuffer","isView","byteOffset","initSegmentId","initSegment","byterange","hexDump","utils","tagDump","textRanges","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","abs","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","sort","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","dinf","esds","ftyp","mfhd","minf","moof","moov","mvex","mvhd","mdia","hdlr","sdtp","stbl","stsd","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","commonjsGlobal","window_1","UINT32_MAX","avc1","avcC","btrt","dref","mdat","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","payload","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","flags","samples","dependsOn","isDependedOn","hasRedundancy","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","Stream","callbacks","pipe","destination","flushSource","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","sei","userData","nalUnitType","payloadType","payloadSize","parseSei","escapedRBSP","parseUserData","latestDts_","ignoreNextEqualDts_","numSameDts_","count","ccData","parseCaptionPackets","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","topRow_","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","row_","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","BASE_","EXT_","CONTROL_","OFFSET_","char","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","METADATA_STREAM_TYPE","reference","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","decodeURIComponent","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","bufferSize","dispatchType","chunk","frameStart","dataAlignmentIndicator","d","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","streamType","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetFlushable","packetData","trackId","ptsDtsFlags","packetLength","timelineStartInfo","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","getUint32","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","newLength","newData","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","ceil","_AacStream","H264Stream","NalByteStream","setTimestamp","header","returnSize","lowThree","middle","bytesLeft","tempLength","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData","collectDtsInfo","clearDtsInfo","calculateTrackBaseMediaDecodeTime","arrayEquals","sumFrameByteLengths","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","sum","adtsFrames","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","trimAdtsFramesByEarliestDts_","keepOriginalTimestamps","prefixWithSilence_","generateSampleTable_","concatenateFrameData_","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ONE_SECOND_IN_TS$1","minSegmentDts","minSegmentPts","dataOffset","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","gops","resetStream_","groupNalsIntoFrames_","groupFramesIntoGops_","keyFrame","getGopForFusion_","nalCount","extendFirstKeyFrame_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","concatenateNalData_","dtsDistance","nearestGopObj","currentGop","currentGopObj","nearestDistance","currentNal","baseDataOffset","nalsByteLength","numberOfNals","view","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","maxSegmentPts","maxSegmentDts","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","parseStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","generator","classCallCheck$$1","createClass$$1","MessageHandlers","initArray","typedArray","action","gopInfo","appendStart","messageHandlers","isAudioCodec","isVideoCodec","translateLegacyCodecs","codecs","orig","profile","avcLevel","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","arity","extents","videoBuffered","audioBuffered","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","pair","parseContentType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","byterangeEnd","Range","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","endOfAllRequests","worstError","prev","getMostImportantError","encryptedBytes","decryptionHandler","requestId","decrypted","encrypted","iv","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","finishProcessingFn","keyXhr","errorObj","Uint32Array","handleKeyResponse","initSegmentXhr","handleInitSegmentResponse","segmentXhr","getRequestStats","handleSegmentResponse","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","detectEndOfStream","segmentIndex","appendedLastSegment","finite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","decrypter_","syncController_","syncController","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","endOfStream","timeline","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","currentTimeline","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","handleSegment_","timingInfo","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","resolution","RESOLUTION","VTT_LINE_TERMINATORS","uintToString","uintArray","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","dateTimeObject","segmentStart","distance","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timescales","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","possibleConstructorReturn$$1","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","inherits$$1","processJob_","job","ntoh","word","Decrypter$$1","initVector","step","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","decrypt$$1","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onError","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","_settings$mediaTypes$2","forced","_settings$mediaTypes$3","instreamId","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","fastChangeFunction","masterPlaylistController_","fastQualityChange_","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","seekTo","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","Hls$1","Decrypter","AsyncStream","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","source_","keySystems","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","vhs","dash","ignoreNextSeekingEvent_","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","pauseLoading","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","get$$1","receiver","getter","get$2","HlsSourceHandler","supportedType","aes_decrypter_es_Decrypter","createClass","emptyObject","isUndef","isDef","isTrue","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","toNumber","makeMap","expectsLowerCase","isBuiltInTag","isReservedAttribute","hasOwn","cached","cache","camelizeRE","camelize","_","capitalize","hyphenateRE","hyphenate","boundFn","toArray","_from","toObject","res","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","keysA","keysB","looseIndexOf","once","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","devtools","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","def","bailRE","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Set","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","targetStack","pushTarget","_target","popTarget","VNode","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","createEmptyVNode","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","setter","childOb","dependArray","newVal","del","strats","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","key$1","inject","computed","provide","defaultStrat","normalizeProps","normalized","normalizeInject","dirs","directives","normalizeDirectives","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","stringIndex","$options","_props","getType","getPropDefaultValue","prevShouldObserve","isSameType","expectedTypes","handleError","cur","$parent","errorCaptured","globalHandleError","logError","microTimerFunc","macroTimerFunc","pending","flushCallbacks","copies","useMacroTask","setImmediate","MessageChannel","channel","port","port2","port1","Promise","resolve","nextTick","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","once$$1","capture","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","altKey","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","_isVList","ensureCtor","base","__esModule","toStringTag","getFirstComponentChild","$once","$on","remove$1","$off","updateComponentListeners","oldListeners","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","isInInactiveTree","_inactive","activateChildComponent","direct","_directInactive","$children","callHook","_hasHookEvent","$emit","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","activatedQueue","updatedQueue","callActivatedHooks","_watcher","_isMounted","callUpdatedHooks","emit","uid$1","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","dirty","deps","newDeps","depIds","newDepIds","expression","parsePath","cleanupDeps","queueWatcher","oldValue","evaluate","teardown","_isBeingDestroyed","sharedPropertyDefinition","proxy","sourceKey","initState","propsOptions","_propKeys","initProps","initMethods","_data","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","$watch","resolveInject","provideKey","_provided","provideDefault","renderList","render","renderSlot","fallback","bindObject","scopedSlotFn","$scopedSlots","slotNodes","$slots","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_l","_t","_q","_m","_f","_k","_b","_v","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","scopedSlots","_scopeId","_c","cloneAndMarkFunctionalResult","mergeProps","componentVNodeHooks","hydrating","parentElm","refElm","_isDestroyed","keepAlive","mountedNode","prepatch","_isComponent","_parentVnode","_parentElm","_refElm","inlineTemplate","createComponentInstanceForVnode","$mount","oldVnode","parentVnode","renderChildren","hasChildren","_renderChildren","$vnode","_vnode","$attrs","$listeners","propKeys","_parentListeners","$forceUpdate","updateChildComponent","insert","destroy","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","_base","cid","factory","errorComp","resolved","loading","loadingComp","contexts","forceRender","reject","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","extractPropsFromVNodeData","functional","renderContext","vnodes","createFunctionalComponent","nativeOn","abstract","installComponentHooks","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","applyNS","force","registerDeepBindings","_createElement","uid$3","super","superOptions","modifiedOptions","modified","latest","extended","extendOptions","sealed","sealedOptions","dedupe","resolveModifiedOptions","components","Vue","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","Comp","initProps$1","initComputed$1","mixin","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","initMixin","dataDef","propsDef","$set","$delete","stateMixin","hookRE","cbs","i$1","eventsMixin","_update","prevEl","$el","prevVnode","prevActiveInstance","__patch__","__vue__","lifecycleMixin","$nextTick","_render","ref","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","created","destroyed","mounted","this$1","configDef","util","delete","installedPlugins","_installedPlugins","install","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","acceptValue","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","query","nodeOps","multiple","createElementNS","namespace","createComment","newNode","referenceNode","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","baseWarn","msg","pluckModuleFunction","modules","addProp","plain","addAttr","addRawAttr","attrsMap","attrsList","addDirective","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","genComponentModel","number","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","add$1","_withTask","onceHandler","remove$2","createOnceHandler","updateDOMListeners","normalizeEvents","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","notInFocus","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","onEnd","transformRE","styles","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","toMs","enter","_leaveCb","cancelled","transition","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","isRenderedModule","inVPre","pre","childrenMatch","fullInvoke","isInitialPatch","isRealElement","oldElm","parentElm$1","patchable","i$2","createPatchFunction","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","hasNoMatchingOption","actuallySetSelected","isMultiple","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","dx","dy","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","_reflow","propertyName","_hasMove","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","parseText","tagRE","tokenValue","rawTokens","@binding","klass$1","staticKeys","transformNode","classBinding","genData","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","comment","conditionalComment","IS_REGEX_CAPTURING_BROKEN","g","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","re","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","argRE","bindRE","modifierRE","decodeHTMLCached","createASTElement","makeAttrsMap","template","isPreTag","root","currentParent","stack","preserveWhitespace","inPre","closeElement","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","ieNSBug","ieNSPrefix","guardIESVGBug","forbidden","checkRootConstraints","processPre","processRawAttrs","processed","processFor","if","addIfCondition","block","else","elseif","processIf","processOnce","processElement","findPrevElement","processIfConditions","slotScope","slotTarget","lastNode","for","checkInFor","processRef","slotName","processSlot","processComponent","isProp","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","alias","iteratorMatch","iterator1","iterator2","parseFor","condition","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","_warn","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","ctrl","alt","meta","genHandlers","genHandler","isMethodPath","isFunctionExpression","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","altGen","altHelper","genFor","ifProcessed","genIf","genChildren","bind$$1","genSlot","genData$2","genComponent","altEmpty","genIfConditions","conditions","genTernaryExp","needRuntime","hasRuntime","gen","genDirectives","genProps","genScopedSlot","inlineRenderFns","genInlineTemplate","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","createFunction","baseCompile","compileToFunctions","compile","finalOptions","tips","tip","compiled","fnGenErrors","createCompileToFunctionFn","getShouldDecode","idToTemplate","mount","outerHTML","getOuterHTML","eval","scrollSetting","","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","reviver","isCallable","toStr","thisArg","forEachString","forEachObject","alert","confirm","prompt","autoKeyword","directionSetting","lr","rl","alignSetting","findAlignSetting","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","findDirectionSetting","snapToLines","line","lineAlign","positionAlign","getCueAsHTML","convertCueToDOMTree","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","f","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","substr","vals","vals0","integer","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","decode","encodeURIComponent","cuetext","overlay","paddedOverlay","margin","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","xy","anchor","onregion","parseRegion","alreadyCollectedLine","hasSubstring","doccy","topLevel","minDoc","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","baseURLPath","newPath","parts","clean","sa","_extends","LineStream","nextNewline","parseAttributes","ParseStream","customParsers","tagType","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","dateTimeString","IV","PRECISE","addParser","customType","dataParser","lineStream","uris","currentUri","currentMap","defaultMediaGroups","allowCache","entry","rendition","allow-cache","endlist","inf","METHOD","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","CHARACTERISTICS","FORCED","program-date-time","targetduration","totalduration","timeOffset","cue-out","cue-out-cont","cue-in","cueIn","custom","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","tryFunctionObject","strClass","parseUTCTiming","__WEBPACK_IMPORTED_MODULE_0_url_toolkit__","__WEBPACK_IMPORTED_MODULE_0_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_1_global_window__","__WEBPACK_IMPORTED_MODULE_1_global_window___default","formatVideoPlaylist","_ref3","_attributes3","periodIndex","merge","objects","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","sourceDuration","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","repeat","segmentTime","nextS","flatten","lists","segmentRange","dynamic","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","_attributes","formatAudioPlaylist","_attributes2","organizeVttPlaylists","toM3u8","UTCTimingNode","parseUTCTimingScheme"],"mappings":"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","file":"static/js/vendor.160d3a5c8b216b9c3947.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = /cRm\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 33ZF\n// module chunks = 0","/**\n * @license\n * Video.js 7.1.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.1.0\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    }).catch(function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  Player.prototype.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this7.playWaitingForReady_ = false;\n        silencePromise(_this7.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play');\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this7.playOnLoadstart_ = null;\n        silencePromise(_this7.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this8 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this8.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this9 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this9.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this9.cache_.sources = sources;\n      _this9.updateSourceCaches_(middlewareSource);\n\n      var err = _this9.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this9.src(sources.slice(1));\n        }\n\n        _this9.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this9.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this9.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this9.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this10 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this10.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this11 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this11.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.1.0\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck$1 = function classCallCheck$$1(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$2 = function get$$1(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get$$1(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits$1 = function inherits$$1(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function possibleConstructorReturn$$1(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray$1 = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits$1(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck$1(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n    return _this;\n  }\n\n  createClass$1(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new Parser();\n\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 1;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 2;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 3;\n          this.mode_ = 'rollUp';\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          this.mode_ = 'paintOn';\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode (not supported)\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[BOTTOM_ROW];\n\n      baseRow += text;\n      this.displayed_[BOTTOM_ROW] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[BOTTOM_ROW] = '';\n    };\n\n    // paintOn mode is not implemented\n    Cea608Stream.prototype.paintOn = function () {};\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the stream.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n          flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS = 90000,\n\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var createDefaultSample, isLikelyAacData, collectDtsInfo, clearDtsInfo, calculateTrackBaseMediaDecodeTime, arrayEquals, sumFrameByteLengths;\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0\n        }\n      };\n    };\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      this.push = function (nalUnit) {\n        collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = this.groupNalsIntoFrames_(nalUnits);\n        gops = this.groupFramesIntoGops_(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = this.extendFirstKeyFrame_(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = this.generateSampleTable_(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(this.concatenateNalData_(gops));\n\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      this.extendFirstKeyFrame_ = function (gops) {\n        var currentGop;\n\n        if (!gops[0][0].keyFrame && gops.length > 1) {\n          // Remove the first GOP\n          currentGop = gops.shift();\n\n          gops.byteLength -= currentGop.byteLength;\n          gops.nalCount -= currentGop.nalCount;\n\n          // Extend the first frame of what is now the\n          // first gop to cover the time period of the\n          // frames we just removed\n          gops[0][0].dts = currentGop.dts;\n          gops[0][0].pts = currentGop.pts;\n          gops[0][0].duration += currentGop.duration;\n        }\n\n        return gops;\n      };\n\n      // Convert an array of nal units into an array of frames with each frame being\n      // composed of the nal units that make up that frame\n      // Also keep track of cummulative data about the frame from the nal units such\n      // as the frame duration, starting pts, etc.\n      this.groupNalsIntoFrames_ = function (nalUnits) {\n        var i,\n            currentNal,\n            currentFrame = [],\n            frames = [];\n\n        currentFrame.byteLength = 0;\n\n        for (i = 0; i < nalUnits.length; i++) {\n          currentNal = nalUnits[i];\n\n          // Split on 'aud'-type nal units\n          if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n            // Since the very first nal unit is expected to be an AUD\n            // only push to the frames array when currentFrame is not empty\n            if (currentFrame.length) {\n              currentFrame.duration = currentNal.dts - currentFrame.dts;\n              frames.push(currentFrame);\n            }\n            currentFrame = [currentNal];\n            currentFrame.byteLength = currentNal.data.byteLength;\n            currentFrame.pts = currentNal.pts;\n            currentFrame.dts = currentNal.dts;\n          } else {\n            // Specifically flag key frames for ease of use later\n            if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n              currentFrame.keyFrame = true;\n            }\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            currentFrame.byteLength += currentNal.data.byteLength;\n            currentFrame.push(currentNal);\n          }\n        }\n\n        // For the last frame, use the duration of the previous frame if we\n        // have nothing better to go on\n        if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n          currentFrame.duration = frames[frames.length - 1].duration;\n        }\n\n        // Push the final frame\n        frames.push(currentFrame);\n        return frames;\n      };\n\n      // Convert an array of frames into an array of Gop with each Gop being composed\n      // of the frames that make up that Gop\n      // Also keep track of cummulative data about the Gop from the frames such as the\n      // Gop duration, starting pts, etc.\n      this.groupFramesIntoGops_ = function (frames) {\n        var i,\n            currentFrame,\n            currentGop = [],\n            gops = [];\n\n        // We must pre-set some of the values on the Gop since we\n        // keep running totals of these values\n        currentGop.byteLength = 0;\n        currentGop.nalCount = 0;\n        currentGop.duration = 0;\n        currentGop.pts = frames[0].pts;\n        currentGop.dts = frames[0].dts;\n\n        // store some metadata about all the Gops\n        gops.byteLength = 0;\n        gops.nalCount = 0;\n        gops.duration = 0;\n        gops.pts = frames[0].pts;\n        gops.dts = frames[0].dts;\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          if (currentFrame.keyFrame) {\n            // Since the very first frame is expected to be an keyframe\n            // only push to the gops array when currentGop is not empty\n            if (currentGop.length) {\n              gops.push(currentGop);\n              gops.byteLength += currentGop.byteLength;\n              gops.nalCount += currentGop.nalCount;\n              gops.duration += currentGop.duration;\n            }\n\n            currentGop = [currentFrame];\n            currentGop.nalCount = currentFrame.length;\n            currentGop.byteLength = currentFrame.byteLength;\n            currentGop.pts = currentFrame.pts;\n            currentGop.dts = currentFrame.dts;\n            currentGop.duration = currentFrame.duration;\n          } else {\n            currentGop.duration += currentFrame.duration;\n            currentGop.nalCount += currentFrame.length;\n            currentGop.byteLength += currentFrame.byteLength;\n            currentGop.push(currentFrame);\n          }\n        }\n\n        if (gops.length && currentGop.duration <= 0) {\n          currentGop.duration = gops[gops.length - 1].duration;\n        }\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n\n        // push the final Gop\n        gops.push(currentGop);\n        return gops;\n      };\n\n      // generate the track's sample table from an array of gops\n      this.generateSampleTable_ = function (gops, baseDataOffset) {\n        var h,\n            i,\n            sample,\n            currentGop,\n            currentFrame,\n            dataOffset = baseDataOffset || 0,\n            samples = [];\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            sample = createDefaultSample();\n\n            sample.dataOffset = dataOffset;\n            sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n            sample.duration = currentFrame.duration;\n            sample.size = 4 * currentFrame.length; // Space for nal unit size\n            sample.size += currentFrame.byteLength;\n\n            if (currentFrame.keyFrame) {\n              sample.flags.dependsOn = 2;\n            }\n\n            dataOffset += sample.size;\n\n            samples.push(sample);\n          }\n        }\n        return samples;\n      };\n\n      // generate the track's raw mdat data from an array of gops\n      this.concatenateNalData_ = function (gops) {\n        var h,\n            i,\n            j,\n            currentGop,\n            currentFrame,\n            currentNal,\n            dataOffset = 0,\n            nalsByteLength = gops.byteLength,\n            numberOfNals = gops.nalCount,\n            totalByteLength = nalsByteLength + 4 * numberOfNals,\n            data = new Uint8Array(totalByteLength),\n            view = new DataView(data.buffer);\n\n        // For each Gop..\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          // For each Frame..\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            // For each NAL..\n            for (j = 0; j < currentFrame.length; j++) {\n              currentNal = currentFrame[j];\n\n              view.setUint32(dataOffset, currentNal.data.byteLength);\n              dataOffset += 4;\n              data.set(currentNal.data, dataOffset);\n              dataOffset += currentNal.data.byteLength;\n            }\n          }\n        }\n        return data;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var mp4 = {\n      generator: mp4Generator,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        window_1.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          window_1.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        window_1.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        window_1.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers();\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Player} player\n *        The player instance\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, player, mapping) {\n  if (!player || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((player.currentTime() - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck$1(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this.transmuxer_ = new TransmuxWorker();\n    _this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        var start = null;\n        var end = null;\n        var arity = 0;\n        var extents = [];\n        var ranges = [];\n\n        // neither buffer has been created yet\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          return videojs$1.createTimeRange();\n        }\n\n        // only one buffer is configured\n        if (!this.videoBuffer_) {\n          return this.audioBuffer_.buffered;\n        }\n        if (!this.audioBuffer_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are configured\n        if (this.audioDisabled_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are empty\n        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n          return videojs$1.createTimeRange();\n        }\n\n        // Handle the case where we have both buffers and create an\n        // intersection of the two\n        var videoBuffered = this.videoBuffer_.buffered;\n        var audioBuffered = this.audioBuffer_.buffered;\n        var count = videoBuffered.length;\n\n        // A) Gather up all start and end times\n        while (count--) {\n          extents.push({ time: videoBuffered.start(count), type: 'start' });\n          extents.push({ time: videoBuffered.end(count), type: 'end' });\n        }\n        count = audioBuffered.length;\n        while (count--) {\n          extents.push({ time: audioBuffered.start(count), type: 'start' });\n          extents.push({ time: audioBuffered.end(count), type: 'end' });\n        }\n        // B) Sort them by time\n        extents.sort(function (a, b) {\n          return a.time - b.time;\n        });\n\n        // C) Go along one by one incrementing arity for start and decrementing\n        //    arity for ends\n        for (count = 0; count < extents.length; count++) {\n          if (extents[count].type === 'start') {\n            arity++;\n\n            // D) If arity is ever incremented to 2 we are entering an\n            //    overlapping range\n            if (arity === 2) {\n              start = extents[count].time;\n            }\n          } else if (extents[count].type === 'end') {\n            arity--;\n\n            // E) If arity is ever decremented to 1 we leaving an\n            //    overlapping range\n            if (arity === 1) {\n              end = extents[count].time;\n            }\n          }\n\n          // F) Record overlapping ranges\n          if (start !== null && end !== null) {\n            ranges.push([start, end]);\n            start = null;\n            end = null;\n          }\n        }\n\n        return videojs$1.createTimeRanges(ranges);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  createClass$1(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      removeCuesFromTrack(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck$1(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n\n    _this.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this.sourceBuffers = [];\n\n    _this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  createClass$1(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits$1(DashPlaylistLoader, _EventTarget);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck$1(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn$1(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this.state = 'HAVE_METADATA';\n    _this.started = true;\n    // we only should have one playlist so select it\n    _this.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass$1(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      this.state = 'HAVE_METADATA';\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      // switching from an already loaded playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n\n      this.refreshMedia_();\n\n      // trigger media change if the active media has been updated\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n\n      master.uri = this.srcUrl;\n\n      // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n\n        master.playlists[i].uri = phonyUri;\n        // set up by URI references\n        master.playlists[phonyUri] = master.playlists[i];\n      }\n\n      // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri;\n          // setup URI references\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this2.request = null;\n\n        if (error) {\n          _this2.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this2.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this2.state === 'HAVE_NOTHING') {\n            _this2.started = false;\n          }\n          return _this2.trigger('error');\n        }\n\n        _this2.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this2.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this2.masterLoaded_ = Date.now();\n        }\n\n        _this2.syncClientServerClock_(_this2.onClientServerClockSync_.bind(_this2));\n      });\n    }\n\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this3 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_);\n\n      // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this3.clientOffset_ = _this3.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this3.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this3.clientOffset_ = serverTime - Date.now();\n\n        done();\n      });\n    }\n\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this4 = this;\n\n      this.master = this.parseMasterXml();\n\n      this.state = 'HAVE_MASTER';\n\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n      // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n      window$1.setTimeout(function () {\n        _this4.trigger('loadedmetadata');\n      }, 0);\n\n      // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this4.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this5 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        var newMaster = _this5.parseMasterXml();\n\n        _this5.master = updateMaster$1(_this5.master, newMaster);\n\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, _this5.master.minimumUpdatePeriod);\n      });\n    }\n\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this6 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this6.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck$1(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass$1(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true;\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n      this.runCallback_();\n    }\n\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n          _this5.sourceBuffer_.remove(start, end);\n        }, noop);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits$1(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck$1(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = { rate: 0, count: 0 };\n    _this.roundTrip = NaN;\n    _this.resetStats_();\n    _this.mediaIndex = null;\n\n    // private settings\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.state_ = 'INIT';\n\n    // private instance variables\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {};\n\n    _this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this.fetchAtBuffer_ = false;\n\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  createClass$1(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything() {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_());\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\nvar uintToString = function uintToString(uintArray) {\n  return String.fromCharCode.apply(null, uintArray);\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  createClass$1(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n          _this3.state = 'READY';\n          _this3.pause();\n          _this3.trigger('error');\n        });\n\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uintToString(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uintToString(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray$1(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits$1(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck$1(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  createClass$1(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          window_1.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck$1(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n\n    _this.mediaTypes_ = createMediaTypes();\n\n    _this.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this.decrypter_ = new Decrypter$1();\n\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_\n    };\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n    _this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n    return _this;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  createClass$1(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method may perform destructive actions, like\n     * removing already buffered content, to readjust the currently\n     * active playlist quickly.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this4 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this4.trigger('firstplay');\n            _this4.tech_.setCurrentTime(seekable$$1.end(0));\n            _this4.hasPlayed_ = function () {\n              return true;\n            };\n          });\n\n          return false;\n        }\n\n        // trigger firstplay to inform the source handler to ignore the next seek event\n        this.trigger('firstplay');\n        // seek to the live point\n        this.tech_.setCurrentTime(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this5 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this5.mediaSource.duration = newDuration;\n        _this5.tech_.trigger('durationchange');\n\n        _this5.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this6 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this6.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes);\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter =\n      // If there is more than one mime type\n      mimeTypes.length > 1 &&\n      // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 &&\n      // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ?\n      // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() :\n      // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck$1(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck$1(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  createClass$1(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.1.0\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits$1(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck$1(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this;\n      // deprecated, for backwards compatibility\n      _player.dash = _this;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n    return _this;\n  }\n\n  createClass$1(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type);\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      get$2(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = 63pp\n// module chunks = 0","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/dist/aes-decrypter.es.js\n// module id = null\n// module chunks = ","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/dist/pkcs7.es.js\n// module id = null\n// module chunks = ","/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/probe.js\n// module id = 9ltH\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 0","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = Pyiu\n// module chunks = 0","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trim/index.js\n// module id = QYuf\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 0","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = XHP2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 0","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = fleF\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = fx5k\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = nIbA\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = pl6C\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 0","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 0","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = sN1u\n// module chunks = 0","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    }\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * @file m3u8/parse-stream.js\n */\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0;\n\n    // strip whitespace\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    }\n\n    // URIs\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    }\n\n    // Comments\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    }\n\n    // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n    line = line.replace('\\r', '');\n\n    // Tags\n    match = /^#EXTM3U/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n      if (match[2]) {\n        event.title = match[2];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n          event.attributes.RESOLUTION = resolution;\n        }\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ENDLIST/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        // parse the IV string into a Uint32Array\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n\n    // unknown tag type\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * @file m3u8/parser.js\n */\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data;\n            // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/dist/m3u8-parser.es.js\n// module id = sg9Q\n// module chunks = 0","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-callable/index.js\n// module id = vRXZ\n// module chunks = 0","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = vmOg\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = yevv\n// module chunks = 0"],"sourceRoot":""}